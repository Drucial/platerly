// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  first_name  String
  last_name   String
  email       String    @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  destroyed_at DateTime?

  @@map("users")
}

model Image {
  id          Int       @id @default(autoincrement())
  name        String
  url         String
  description String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  destroyed_at DateTime?

  ingredients Ingredient[]

  @@map("images")
}

model IngredientLocation {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  destroyed_at DateTime?

  ingredients Ingredient[]

  @@map("ingredient_locations")
}

model IngredientType {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  destroyed_at DateTime?

  ingredients Ingredient[]

  @@map("ingredient_types")
}

model Ingredient {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  destroyed_at DateTime?

  image_id    Int?
  image       Image?    @relation(fields: [image_id], references: [id])

  location_id Int?
  location    IngredientLocation? @relation(fields: [location_id], references: [id])

  type_id     Int?
  type        IngredientType? @relation(fields: [type_id], references: [id])

  @@map("ingredients")
}
